function CreateNonExistentFilesForReact()
{
    if [ ! -f .env ]; then
        cp /PaydarCore/Infra/React/Dev/EnvTemplate .env
    fi
    if [ ! -f .env.production ]; then
        touch .env.production
    fi
    if [ ! -f Menu.jsx ]; then
        cp /PaydarCore/Infra/React/Dev/MenuTemplate Menu.jsx
    fi
    if [ ! -f Routes.jsx ]; then
        cp /PaydarCore/Infra/React/Dev/RoutesTemplate Routes.jsx
    fi
    if [ ! -f HeaderActions.jsx ]; then
        cp /PaydarCore/Infra/React/Dev/HeaderActionsTemplate HeaderActions.jsx
    fi
    sudo chmod -R 777 $PWD
}

function BuildDependenciesMappingsForReact() 
{
    if [ ! -f /$Organization/$Repository/Common/Dependencies ]; then
        return;
    fi
    while read Dependency; do
        Repo=${Dependency}
        if [ -d /$Organization/$Repository/$Dependency ]; then
            Org=$Organization
        else
            Org=PaydarCore
        fi
        if [ ! -d /$Org/$Repo/Admin ]; then
            Warning "Wrong dependency: $Dependency. No /$Org/$Repo/Admin"
            continue;
        fi
        if [[ $Repo == Common ]]; then
            continue;
        fi
        export volumes="$volumes\n      - *$Org*$Repo:*$Org*$Repo"
        if [[ $(basename $PWD) == *Admin* ]]; then
            export volumes="$volumes\n      - *$Org*$Repo*Admin:*$Repository*$Project*src*$Repo"
        fi
    done <<< "$({ echo Entities; echo Globalization; echo Accounts; cat "/$Organization/$Repository/Common/Dependencies"; echo; })"
}

function BuildMappings()
{
    while read Item; do
        ReplacedItem=${Item#./}
        if [[ $ReplacedItem == "" ]]; then
            continue;
        fi
        if [ $ReplacedItem == Dependencies ]; then
            Error "Remove Dependencies link from panel source code"
            exit
        fi
        export volumes="$volumes\n      - *$Organization*$Repository*$Project*$ReplacedItem:*$Repository*$Project*src*$ReplacedItem"
    done <<< "$(find . -mindepth 1 -maxdepth 1 -type l -or -type d -not -name .github -not -name .git | sort)"
}

function SetupPanel()
{
    Info "React setup"
    # CreateGitHubAction Next

    export volumes=""
    BuildDependenciesMappingsForReact
    BuildMappings
    # echo -e $volumes

    CreateNonExistentFilesForReact

    envsubst < /PaydarCore/Docker/Composes/Panel > $ComposePath
    sed -i "s/# Dependencies/$volumes/g" $ComposePath
    sed -i "s/*/\//g" $ComposePath
}

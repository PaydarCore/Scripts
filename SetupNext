function CreateNonExistentFilesForSite()
{
    sudo mkdir -p Components
    sudo mkdir -p Components/Shared
    sudo mkdir -p App
    sudo mkdir -p Public
    sudo mkdir -p Contents
    sudo mkdir -p Styles
    sudo chmod -R 777 $PWD
    if [[ $(find Components -type f | wc -l) == 0 ]]; then
        cp /PaydarCore/Infra/Next/FooterTemplate ./Components/Shared/Footer.js
    fi 
    if [ ! -f NextConfig.js ]; then
        cp /PaydarCore/Infra/Next/NextConfigTemplate NextConfig.js
    fi
    if [ ! -f TailwindConfig.js ]; then
        cp /PaydarCore/Infra/Next/TailwindConfigTemplate TailwindConfig.js
    fi
    if [ ! -f .env ]; then
        touch .env
    fi
    if [ ! -f .env.production ]; then
        touch .env.production
    fi
    if [ ! -f JsConfig.json ]; then
        cp /PaydarCore/Infra/Next/JsConfigTemplate JsConfig.json
    fi
    if [ ! -f App/index.js ] && [ ! -f App/page.js ] && [ ! -f "App/[[...path]].js" ]; then
        cp /PaydarCore/Infra/Next/IndexTemplate App/index.js
    fi
    if [ ! -f App/_app.js ]; then
        cp /PaydarCore/Infra/Next/AppTemplate App/_app.js
    fi
    sudo chmod -R 777 $PWD
}

function BuildDependenciesMappings()
{
    if [ ! -f /$Organization/$Repository/Common/Dependencies ]; then
        return;
    fi
    while read Dependency; 
    do
        if [[ $Next13 ]]; then
            if [ -d /PaydarCore/$Dependency/Next/App ]; then
                while read foundDirectory;
                do
                    pageDirectory=$(basename $foundDirectory)
                    if [ ! -d /$Organization/$Repository/$Project/App/$pageDirectory ] || [[ $(find /$Organization/$Repository/$Project/App/$pageDirectory -mindepth 1 | wc -l ) == 0 ]]; then
                        export volumes="$volumes\n      - *PaydarCore*$Dependency*Next*App*$pageDirectory:*$Repository*$Project*app*$pageDirectory"
                    fi
                done <<< "$(find /PaydarCore/$Dependency/Next/App -mindepth 1 -maxdepth 1 -type d)"
            fi
        else
            if [ -d /PaydarCore/$Dependency/Next/Pages ]; then
                while read foundDirectory;
                do
                    pageDirectory=$(basename $foundDirectory)
                    if [ ! -d /$Organization/$Repository/$Project/App/$pageDirectory ] || [[ $(find /$Organization/$Repository/$Project/App/$pageDirectory -mindepth 1 | wc -l ) == 0 ]]; then
                        export volumes="$volumes\n      - *PaydarCore*$Dependency*Next*App*$pageDirectory:*$Repository*$Project*pages*$pageDirectory"
                    fi
                done <<< "$(find /PaydarCore/$Dependency/Next/App -mindepth 1 -maxdepth 1 -type d)"
            fi
        fi
        if [ -d /PaydarCore/$Dependency/Next/Components ]; then
            export volumes="$volumes\n      - *PaydarCore*$Dependency*Next*Components:*$Repository*$Project*Modules*$Dependency*Components"
        fi
        if [ -d /PaydarCore/$Dependency/Next/Contexts ]; then
            export volumes="$volumes\n      - *PaydarCore*$Dependency*Next*Contexts:*$Repository*$Project*Modules*$Dependency*Contexts"
        fi
        if [ -d /PaydarCore/$Dependency/Next/Hooks ]; then
            export volumes="$volumes\n      - *PaydarCore*$Dependency*Next*Hooks:*$Repository*$Project*Modules*$Dependency*Hooks"
        fi
        if [ -d /PaydarCore/$Dependency/Next/Functions ]; then
            export volumes="$volumes\n      - *PaydarCore*$Dependency*Next*Functions:*$Repository*$Project*Modules*$Dependency*Functions"
        fi
        if [ -f /PaydarCore/$Dependency/Next/Exports.js ]; then
            export volumes="$volumes\n      - *PaydarCore*$Dependency*Next*Exports.js:*$Repository*$Project*Modules*$Dependency*Exports.js"
        fi
    done <<< "$({ cat "/$Organization/$Repository/Common/Dependencies"; echo; })"
}

function SetupNext() 
{
    Info "Seting up site"
    # LinkGitIgnore $PWD
    # CreateGitHubAction Next
    # DetermineTailwindConfigPath
    CreateNonExistentFilesForSite
    export volumes=""
    BuildDependenciesMappings
    # echo -e $volumes

    export Next13=$(grep "app:\s*true" NextConfig.js)

    envsubst < /PaydarCore/Infra/Next/Dev/DockerCompose.yml > $ComposePath

    sed -i "s/# Dependencies/$volumes/g" $ComposePath
    sed -i "s/*/\//g" $ComposePath
}
